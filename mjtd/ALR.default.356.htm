<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=GBK">
<title>vlax-make-safearray</title>
<link type="text/css" href="ac.acad_ak.css" rel="StyleSheet">
<link media="print" type="text/css" href="ac.acad_ak_print.css" rel="StyleSheet">
<script src="ac_common.js" language="javascript"></script><script src="ac.strings.js" language="javascript"></script><script src="ac.acad_ak.js" language="javascript"></script>
</head>
<body bgcolor="#ffffff">
<div class="HeadingDiv">
<table class="HeadingTable" border="0" cellspacing="0" cellpadding="0" width="103%">
<tr valign="top">
<td class="BookTitleCell" height="29">
<div class="BookTitle">
<a href="ALR.default.246v.htm"><span class="BookTitleLink">明经通道 Visual LISP 函数</span></a>
</div>	
									&nbsp;
								</td><td align="right">
<table border="0" cellspacing="0" cellpadding="0" class="HeadNavTable">
<tr>
<td class="InfoLine" id="infoline" align="right">明经通道 Visual LISP 函数&nbsp;</td><td class="NavGif"><a title="回到上一层..." href="ALR.default.246v.htm"><span onmouseout="showinfo(0);" onmouseover="showinfo(1);" class="HeadNavLink"><img border="0" src="ac.pg_up.gif"></span></a></td><td>&nbsp;</td> 
</tr>
</table>
</td>
</tr>
<tr>
<td colspan="2">
<div class="TopHead">vlax-make-safearray</div>
</td>
</tr>
<tr valign="bottom">
<td height="33" colspan="2">
<table cellpadding="0" cellspacing="0" border="0" class="TabTable">
<tr>
<td width="10">&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
<p id="crleadin" class="cr_leadin">创建 SafeArray</p> 
<pre class="prog_in_end">(vlax-make-safearray type ’(l-bound . u-bound) [’(l-bound . u-bound)...)]</pre>
<p class="body">一个数组最多可以定义 16 维。数组中的元素按如下方式初始化：</p> 
<p class="define_head">Numbers</p>
<p class="define_text">0</p>
<p class="define_head">Strings</p>
<p class="define_text">零长度字符串。</p>
<p class="define_head">Booleans</p>
<p class="define_text">
<span class="CharCourier">:vlax-false</span>
</p>
<p class="define_head">Object</p>
<p class="define_text">
<span class="CharCourier">nil</span>
</p>
<p class="define_head">Variant</p>
<p class="define_text">未初始化 (vlax-vbEmpty)</p> 
<p class="Heading-2">参数</p>
<p class="define_head">type</p>
<p class="define_text">SafeArray 的类型。可指定如下常量：</p> 
<p class="define_text">
<span class="CharSansBold">vlax-vbInteger </span>(2) 整数型</p>
<p class="define_text">
<span class="CharSansBold">vlax-vbLong</span> (3) 长整数型</p>
<p class="define_text">
<span class="CharSansBold">vlax-vbSingle</span> (4) 单精度浮点数</p>
<p class="define_text">
<span class="CharSansBold">vlax-vbDouble</span> (5) 双精度浮点数</p>
<p class="define_text">
<span class="CharSansBold">vlax-vbString</span> (8) 字符串</p>
<p class="define_text">
<span class="CharSansBold">vlax-vbObject</span> (9) 对象</p>
<p class="define_text">
<span class="CharSansBold">vlax-vbBoolean</span> (11) 布尔值</p>
<p class="define_text">
<span class="CharSansBold">vlax-vbVariant</span> (12) 变体</p>
<p class="define_text">括号中的整数表示常量的值。在参数中最好指定常量，而不要指定常量的值。因为这些值在后续 AutoCAD 中可能会有所变化。</p> 
<p class="define_head">&rsquo;(l-bound . u-bound)</p>
<p class="define_text">某一维的上、下界。</p>
<p class="Heading-2">返回值</p>
<p class="body">创建的 SafeArray。</p> 
<p class="Heading-2">示例</p>
<p class="body">创建从索引 0 开始、包含双精度数的一维数组：</p> 
<pre class="prog_in">_$ (setq point (vlax-make-safearray vlax-vbDouble '(0 . 3)))</pre>
<pre class="prog_in_end">#&lt;safearray...&gt;</pre>
<p class="body">使用 vlax-safearray->list 函数将 SafeArray 的内容显示为表：</p> 
<pre class="prog_in">_$ (vlax-safearray-&gt;list point)</pre>
<pre class="prog_in_end">(0.0 0.0 0.0 0.0)</pre>
<p class="body">结果说明，数组中的每个元素都被初始化为 0。</p> 
<p class="body">创建二维的字符串数组，其中每个维从索引 1 开始：</p> 
<pre class="prog_in">_$ (setq matrix (vlax-make-safearray vlax-vbString '(1 . 2) '(1 . 2) ))</pre>
<pre class="prog_in_end">#&lt;safearray...&gt;</pre>
<p class="see_also">参阅</p>
<p class="body"> <a href="ALR.default.357.htm">vlax-make-variant</a>、 <a href="ALR.default.367.htm">vlax-safearray-fill</a>、<a href="ALR.default.368.htm">vlax-safearray-get-dim</a>、<a href="ALR.default.369.htm">vlax-safearray-get-element</a>、 <a href="ALR.default.370.htm">vlax-safearray-get-l-bound</a>、 <a href="ALR.default.371.htm">vlax-safearray-get-u-bound</a>、 <a href="ALR.default.372.htm">vlax-safearray-put-element</a>、 <a href="ALR.default.373.htm">vlax-safearray-type</a>、 <a href="ALR.default.374.htm">vlax-safearray-&gt;list</a> 
和&nbsp; <a href="ALR.default.379.htm">vlax-variant-value</a> 函数。 关于使用这些函数的详细信息，请参见 
《Visual LISP 开发人员手册》中的 <a href="ms-its:ACAD_ALG.chm::/ALG.06.017.htm">使用</a><a href="ms-its:ACAD_ALG.chm::/ALG.06.017.htm"> 
Safearrays</a>。</p>
<table cellpadding="4" cellspacing="0" border="0" width="100%" class="FooterTable">
<tr valign="top">
<td><P class=element><a href=http://www.mjtd.com>明经通道</a> 版权所有 未经许可 不得传播</td><td><script language=javascript src='ac.acad_mc.js'></script></td><td align="right">&nbsp;<a href="javascript:doComments();"><span class="CommentsLink" title="点击此处发送有关对本主题的评论">评论</span></a>&nbsp;</td>
</tr>
</table>
<p class="footer_padding">&nbsp;</p>
</body> 
</html>
