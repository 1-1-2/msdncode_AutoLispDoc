<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>initget</title>
<link type="text/css" href="ac.acad_ak.css" rel="StyleSheet">
<link media="print" type="text/css" href="ac.acad_ak_print.css" rel="StyleSheet">
<script src="ac_common.js" language="javascript"></script><script src="ac.strings.js" language="javascript"></script><script src="ac.acad_ak.js" language="javascript"></script>
</head>
<body bgcolor="#ffffff">
<div class="HeadingDiv">
<table class="HeadingTable" border="0" cellspacing="0" cellpadding="0" width="103%">
<tr valign="top">
<td class="BookTitleCell" height="29">
<div class="BookTitle">
<a href="ALR.default.001.htm"><span class="BookTitleLink">明经通道 AutoLISP 函数</span></a>
</div>	
									&nbsp;
								</td><td align="right">
<table border="0" cellspacing="0" cellpadding="0" class="HeadNavTable">
<tr>
<td class="InfoLine" id="infoline" align="right">明经通道 AutoLISP 函数&nbsp;</td><td class="NavGif"><a title="回到上一层..." href="ALR.default.001.htm"><span onmouseout="showinfo(0);" onmouseover="showinfo(1);" class="HeadNavLink"><img border="0" src="ac.pg_up.gif"></span></a></td><td>&nbsp;</td>  
</tr>
</table>
</td>
</tr>
<tr>
<td colspan="2">
<div class="TopHead">initget</div>
</td>
</tr>
<tr valign="bottom">
<td height="33" colspan="2">
<table cellpadding="0" cellspacing="0" border="0" class="TabTable">
<tr>
<td width="10">&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
<p id="crleadin" class="cr_leadin">为随后的用户输入函数调用创建关键字</p>
<pre class="prog_in_end">(initget [bits] [string])</pre>
<p class="body">能够接受关键字输入的函数有 getint、getreal、getdist、getangle、getorient、getpoint、getcorner、getkword、entsel、nentsel 和 nentselp。getstring 函数是唯一不接受关键字的用户输入函数。</p>  
<p class="body">在随后调用用户输入函数时，如果用户输入的不是相应的数据类型（例如与 getpoint 函数相对应的类型是一个点），该函数将检索关键字表来确定用户是否键入了一个关键字。如果用户的输入和表中的一个关键字相匹配，函数将以字符串的形式返回该关键字。应用程序可以对返回的关键字进行检测，并对每一个关键字执行相应动作。如果用户的输入不是相应类型且和表中任何一个关键字都不匹配，AutoCAD 将要求用户再次输入。initget 函数的位编码值与关键字表仅对紧随其后的那个用户输入函数有效。</p>  
<p class="body">如果 initget 函数设置了一个控制位，而该控制位对应用程序随后调用的那个用户输入函数来说没有意义，则忽略该控制位。</p>  
<p class="body">如果用户的输入不满足一个或多个指定条件（例如在不允许输入零值时输入了零值），AutoCAD 将显示信息要求用户再次输入。</p>  
<p class="Heading-2">参数</p>
<p class="define_head">bits</p>
<p class="define_text">按位编码的整数，用于控制是否允许某些类型的用户输入。这些控制位可以任意组合（即把各位加起来），构成 0 到 225 之间的值。如果没有指定 bits 参数，则假定它是 0。各位的值如下：</p>  
<p class="define_text">
<span class="CharSansBold">1</span><span class="CharSans">  （位0）  禁止用户仅按 ENTER 键来响应输入请求。</span> </p>  
<p class="define_text">
<span class="CharSansBold">2</span>
<span class="CharSansBold"> </span>（位1）  禁止用户输入零值来响应输入请求。</p>  
<p class="define_text">
<span class="CharSansBold">4</span><span class="CharSans">  </span> （位2）  禁止用户输入负值来响应输入请求。</p>  
<p class="define_text">
<span class="CharSansBold">8</span><span class="CharSans">  </span> （位3）  允许用户在当前图形界限之外输入一个点，即使 AutoCAD  
的系统变量 LIMCHECK 当前被设置为开 (ON)，本条件也照样对随后调用的用户输入函数有效。</p>  
<p class="define_text">
<span class="CharSansBold">16</span><span class="CharSans">  </span> （位4）  （目前不使用）。</p>  
<p class="define_text">
<span class="CharSansBold">32</span><span class="CharSans">  </span> （位5）  用虚线绘制拖引线或拉伸方框。对于那些可以由用户在图形屏幕上通过选择位置来指定一个点的函数，设置该控制位将使拖引线和拉伸方框显示为虚线而不是实线（某些显示驱动程序用颜色醒目的线来代替虚线）。如果系统变量 POPUPS 设为 0，AutoCAD 将忽略该控制位。</p>  
<p class="define_text">
<span class="CharSansBold">64</span><span class="CharSans">  </span> （位6）  禁止输入 Z 坐标，以使应用程序确保该函数返回的是二维距离。</p>  
<p class="define_text">
<span class="CharSansBold">128</span><span class="CharSans">  </span> （位7）  在尊重任何其他的控制位和所列出的关键字的情况下，允许任意的输入，就好象它是一个关键字一样。该位的优先权高于位 0<br>  
：如果同时设置了位 7 和位 0，那么用户仅键入 ENTER 键时，将返回空字符串。</p>  
<p class="note">
<span class="note_char">注意</span>&nbsp;AutoLISP 的后续版本中可能会使用其他 initget 控制位，所以不要设置此处未提及的位。</p>  
<p class="define_head">string</p>
<p class="define_text">代表关键字表的字符串。关于定义关键字的信息，请参见关键字规范。</p>
<p class="Heading-2">返回值</p>
<p class="body">
<span class="CharCourier">nil</span>
</p>
<p class="body">可用的控制位</p>
<p class="body">对特定的 getxxx 函数来说，只有特定的控制位才有意义，下表对此作了全面说明。</p>  
<table class="BasicLeft" rules="cols" cellspacing="0">
<thead>
<tr class="row_0">
<th colspan="9">
<p class="table_heading">用户输入函数和可用的控制位 </p>
</th>
</tr>
<tr class="row_0">
<th>
<p class="table_heading"></p>
<p class="table_heading">函数</p>
</th><th>
<p class="table_heading">关键字<br>
是否可用
</th><th colspan="7">
<p class="table_heading">控制位的值</p>
</th>
</tr>
<tr class="row_0">
<th>
</th><th>
</th><th>
<p class="table_heading">非空</p>
<p class="table_heading">(1)</p>
</th><th>
<p class="table_heading">非零</p>
<p class="table_heading">(2)</p>
</th><th>
<p class="table_heading">非负</p>
<p class="table_heading">(4)</p>
</th><th>
<p class="table_heading">非限</p>
<p class="table_heading">(8)
</th><th>
<p class="table_heading">使用虚线</p>
<p class="table_heading">(32)</p>
</th><th>
<p class="table_heading">二维距离</p>
<p class="table_heading">(64)</p>
</th>
<th>
<p class="table_heading">随机输入</p>
<p class="table_heading">(128)</p>
</th>

</tr>
</thead>
<tbody>
<tr class="row_1">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">getint</span>
</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td>
</tr>
<tr class="row_2">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">getreal</span>
</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td>
</tr>
<tr class="row_1">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">getdist</span>
</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td>
</tr>
<tr class="row_2">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">getangle</span>
</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td>
</tr>
<tr class="row_1">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">getorient</span>
</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td>
</tr>
<tr class="row_2">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">getpoint</span>
</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td>
</tr>
<tr class="row_1">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">getcorner</span>
</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td>
</tr>
<tr class="row_2">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">getkword</span>
</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td>
</tr>
<tr class="row_1">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">entsel</span>
</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td>
</tr>
<tr class="row_2">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">nentsel</span>
</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td>
</tr>
<tr class="row_1">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">nentselp </span>
</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">X</p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td><td class="BasicLeft_CELL">
<p class="table_body"></p>
</td>
</tr>
</tbody>
</table>
<p class="body">关键字规范</p>
<p class="body">string 参数按如下规则解释：</p> 
<ol>
<li class="list_numbered_reset">每个关键字与随后的关键字之间用一个或多个空格分隔。例如，“Width Height Depth”定义了三个关键字。</li> 
<li class="list_numbered_end">关键字只能由字母、数值和连字符 (-) 组成。</li> 
</ol>
<p class="body">关键字有如下两种缩写办法：</p>
<ul>
<li class="list_bulleted_begin">关键字的必需部分用大写字母表示，而其余部分用小写字母表示。大写的缩写部分可以位于关键字的任何位置（例如，“LType”、“eXit”或“toP”）。</li>
<li class="list_bulleted_end">整个关键字用大写字母表示，其后紧跟一个逗号，然后再跟随其必需部分（例如，“LTYPE,LT”）。这种情况下，关键字的必需部分必须包含关键字的第一个字符，这意味着“EXIT,X”是无效的。</li>
</ul>
<p class="body">“LType”和“LTYPE,LT”这两种关键字缩写方式是等价的。如果用户键入 LT（无论是大小写），都可以被识别为这个关键字。用户还可以输入关键字必需部分之后的字符，这样它们就不会与缩写规则相冲突了。在本例中，用户可以输入 LTY 或 LTYP，但只输入 L 是不够的。</p> 
<p class="body">如果 string 参数完全以大写或小写字符给出，其后没有逗号，也没有跟随必需部分，则只有用户完整输入这个关键字时 AutoCAD 才能识别。</p> 
<p class="body">initget 函数支持本地化的关键字。下列关键字字符串语法允许输入本地化的关键字，而返回与语言无关的关键字：</p> 
<pre class="prog_in_end">&quot;local1 local2 localn_indep1 indep2 indepn&quot;</pre>
<p class="body">在这里，local1 至 localn 是本地化的关键字，而从 indep1 到 indepn 是与语言无关的关键字。</p> 
<p class="body">本地化关键字和语言无关关键字的数目必须相同，而且第一个与语言无关的关键字的前面必须有一个下划线，如下例所示：</p>
<pre class="prog_in">(initget &quot;Abc Def _Ghi Jkl&quot;)</pre>
<pre class="prog_in_end">(getkword &quot;\n输入选项 (Abc/Def): &quot;)</pre>
<p class="body">输入 A 返回 Ghi，输入 _J 则返回 Jkl。</p> 
<p class="see_also">参阅</p>
<p class="body"> <a href="ALR.default.092.htm">entsel</a>、<a href="ALR.default.114.htm">getangle</a>、<a href="ALR.default.117.htm">getcorner</a>、<a href="ALR.default.118.htm">getdist</a>、 <a href="ALR.default.121.htm">getint</a>、<a href="ALR.default.122.htm">getkword</a>、<a href="ALR.default.123.htm">getorient</a>、<a href="ALR.default.124.htm">getpoint</a>、<a href="ALR.default.125.htm">getreal</a>、<a href="ALR.default.126.htm">getstring</a>、 <a href="ALR.default.168.htm">nentsel</a> 
和 <a href="ALR.default.169.htm">nentselp</a>  函数。《Visual LISP 
开发人员手册》中的 <a href="ms-its:ACAD_ALG.chm::/ALG.09.016.htm">用户输入函数的条件控制</a>。</p>
<table cellpadding="4" cellspacing="0" border="0" width="100%" class="FooterTable">
<tr valign="top">
<td><P class=element><a href=http://www.mjtd.com>明经通道</a> 版权所有 未经许可 不得传播</td><td><script language=javascript src='ac.acad_mc.js'></script></td><td align="right">&nbsp;<a href="javascript:doComments();"><span class="CommentsLink" title="点击此处发送有关对本主题的评论">评论</span></a>&nbsp;</td>
</tr>
</table>
<p class="footer_padding">&nbsp;</p>
</body> 
</html>
