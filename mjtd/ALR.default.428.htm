<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>wcmatch</title>
<link type="text/css" href="ac.acad_ak.css" rel="StyleSheet">
<link media="print" type="text/css" href="ac.acad_ak_print.css" rel="StyleSheet">
<script src="ac_common.js" language="javascript"></script><script src="ac.strings.js" language="javascript"></script><script src="ac.acad_ak.js" language="javascript"></script>
</head>
<body bgcolor="#ffffff">
<div class="HeadingDiv">
<table class="HeadingTable" border="0" cellspacing="0" cellpadding="0" width="103%">
<tr valign="top">
<td class="BookTitleCell" height="29">
<div class="BookTitle">
<a href="ALR.default.001.htm"><span class="BookTitleLink">明经通道 AutoLISP 函数</span></a>
</div>	
									&nbsp;
								</td><td align="right">
<table border="0" cellspacing="0" cellpadding="0" class="HeadNavTable">
<tr>
<td class="InfoLine" id="infoline" align="right">明经通道 AutoLISP 函数&nbsp;</td><td class="NavGif"><a title="回到上一层..." href="ALR.default.001.htm"><span onmouseout="showinfo(0);" onmouseover="showinfo(1);" class="HeadNavLink"><img border="0" src="ac.pg_up.gif"></span></a></td><td>&nbsp;</td> 
</tr>
</table>
</td>
</tr>
<tr>
<td colspan="2">
<div class="TopHead">wcmatch</div>
</td>
</tr>
<tr valign="bottom">
<td height="33" colspan="2">
<table cellpadding="0" cellspacing="0" border="0" class="TabTable">
<tr>
<td width="10">&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
<p id="crleadin" class="cr_leadin">将模式字符串与某指定的字符串进行匹配比较</p>
<pre class="prog_in_end">(wcmatch string pattern) </pre>
<p class="Heading-2">参数</p>
<p class="define_head">string</p>
<p class="define_text">要比较的字符串。比较是区分大小写的，所以必须严格匹配大小写字符。</p>
<p class="define_head">pattern</p>
<p class="define_text">模式字符串，包含与 string 进行匹配的模式。pattern 可以包含表通配符中所列的通配符。在多个模式条件之间用逗号 (,) 分隔。函数仅比较 string 和 pattern 的前 500 个字符（约数），后面的字符将被省略。</p> 
<p class="body">这两个参数既可以是由双引号引起来的字符串，也可以是变量。可以使用其他 明经通道 AutoLISP 函数返回的变量和值作为 string 和 pattern 的值。</p> 
<p class="Heading-2">返回值</p>
<p class="body">如果 string 和 pattern 匹配，wcmatch 返回 T，否则 wcmatch 返回 nil。</p> 
<table class="BasicLeft" rules="cols" cellspacing="0">
<thead>
<tr class="row_0">
<th colspan="2">
<p class="table_heading">通配符 </p>
</th>
</tr>
<tr class="row_0">
<th>
<p class="table_heading">通配符</p>
</th><th>
<p class="table_heading">定义</p>
</th>
</tr>
</thead>
<tbody>
<tr class="row_1">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">#</span>  (磅值符号)</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">匹配任意单个数值字符
</td>
</tr>
<tr class="row_2">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">@</span> (at)</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">匹配任意单个字母字符
</td>
</tr>
<tr class="row_1">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">.</span>  (句号)</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">匹配任意单个非字母数值字符
</td>
</tr>
<tr class="row_2">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">*</span>  (星号)</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">匹配任意字符序列，包括空字符串，它可以出现在任何位置，包括开头、中间和结尾处
</td>
</tr>
<tr class="row_1">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">?</span>  (问号)</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">匹配任意单个字符
</td>
</tr>
<tr class="row_2">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">~</span>  (波浪号)</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">如果它是模式字符串的第一个字符，则匹配除此字符串之外的任意字符串
</td>
</tr>
<tr class="row_1">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">[...]</span>
</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">匹配括号中的任意一个字符
</td>
</tr>
<tr class="row_2">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">[~...]</span>
</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">匹配不在括号中的任意单个字符
</td>
</tr>
<tr class="row_1">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">&ndash; </span>(连字符)</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">用在括号里面，用来指明单个字符的取值范围
</td>
</tr>
<tr class="row_2">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">,</span>  (逗点)</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">分隔两个模式字符串
</td>
</tr>
<tr class="row_1">
<td class="BasicLeft_CELL">
<p class="table_body">
<span class="CharCourier">`</span>  (单引号)</p>
</td><td class="BasicLeft_CELL">
<p class="table_body">特殊转义字符（按字义读取随后的字符）
</td>
</tr>
</tbody>
</table>
<p class="Heading-2">示例</p>
<p class="body">该例子测试字符串 "Name" 是否以字符 N 开头：</p> 
<p class="prompt_end">命令： <span class="CharSansBold">(wcmatch "Name" "N*")</span> 
</p>
<p class="prompt_end">T</p>
<p class="body">下例进行三个比较。只要字符串匹配三个模式字符串中的任何一个，wcmatch 返回 T。在本例中进行的测试有：</p> 
<ul>
<li class="list_bulleted_begin">字符串包含三个字符?</li>
<li class="list_bulleted">字符串中不含字符 m?</li> 
<li class="list_bulleted_end">字符串以字符 N 开头?</li> 
</ul>
<p class="body">如果满足其中至少一个条件，则 wcmatch 返回 T：</p> 
<p class="prompt_end">命令： <span class="CharSansBold">(wcmatch "Name" "???,~*m*,N*")</span> 
</p>
<p class="prompt_end">T </p>
<p class="body">本例中满足最后一个条件，所以 wcmatch 返回 T。</p> 
<p class="body">在 wcmatch 中使用转义字符</p> 
<p class="body">要测试一个字符串中的通配符，可以使用单个单引号 (`) 来转义字符。转义是指跟在单个单引号后面的字符不当作通配符读取，而是按其表面值进行比较。例如，为了测试在字符串 Name 中是否包含逗号，可以使用如下表达式：</p> 
<p class="prompt_end">命令： <span class="CharSansBold">(wcmatch "Name" "*`,*")</span> 
</p>
<p class="prompt_end">nil</p>
<p class="body">由于 C 和 AutoLISP 程序设计语言都使用反斜杠 (\) 作为转义字符，所以在字符串中必须使用两个反斜杠 (\\) 
才能表示一个反斜杠。为了测试字符串 Name 中是否包含一个反斜杠，可以使用如下表达式：</p> 
<p class="prompt_end">命令： <span class="CharSansBold">(wcmatch "Name" "*`\\*")</span> 
</p>
<p class="prompt_end">nil</p>
<p class="body">所有包含在括号 ([ . . . ]) 中的字符都按字义读取，所以不必使用转义字符。但有如下例外：只有当波浪线字符 (~) 不是括号里的第一个字符（如 [A~BC]）时才按字义读取；否则作为一个“非”字符读取它，这意味着 wcmatch 函数将匹配跟随在波浪号之后那些字符（如 [~ABC]）之外的所有字符。而连字符 (-) 则只有当它是括号中的第一个字符或最后一个字符（如 [-ABC] 或 [ABC-]），或者它跟在前导的波浪号后面时，才按字义读取。否则，在括号中的连字符用于指定某特定字符的取值范围。该范围仅限于单个字符，所以，STR[1-38] 与 STR1、STR2、STR3 和 STR8 匹配，而 [A-Z] 与任意单个大写字母匹配。</p> 
<p class="body">如果闭括号 ("]") 是括号内的首个字符或跟随在波浪号之后（如 [ ]ABC] 或 [~]ABC]），它将被按字义读取。</p> 
<p class="note">
<span class="note_char">注意</span>&nbsp;由于 AutoLISP 的后续版本中可能会加入其他的通配符，所以建议在样本中给所有非字母数值字符加上转义字符转义，以确保它的向上兼容性。</p> 
<table cellpadding="4" cellspacing="0" border="0" width="100%" class="FooterTable">
<tr valign="top">
<td><P class=element><a href=http://www.mjtd.com>明经通道</a> 版权所有 未经许可 不得传播</td><td><script language=javascript src='ac.acad_mc.js'></script></td><td align="right">&nbsp;<a href="javascript:doComments();"><span class="CommentsLink" title="点击此处发送有关对本主题的评论">评论</span></a>&nbsp;</td>
</tr>
</table>
<p class="footer_padding">&nbsp;</p>
</body> 
</html>
