<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>defun-q-list-set</title>
<link type="text/css" href="ac.acad_ak.css" rel="StyleSheet">
<link media="print" type="text/css" href="ac.acad_ak_print.css" rel="StyleSheet">
<script src="ac_common.js" language="javascript"></script><script src="ac.strings.js" language="javascript"></script><script src="ac.acad_ak.js" language="javascript"></script>
</head>
<body bgcolor="#ffffff">
<div class="HeadingDiv">
<table class="HeadingTable" border="0" cellspacing="0" cellpadding="0" width="103%">
<tr valign="top">
<td class="BookTitleCell" height="29">
<div class="BookTitle">
<a href="ALR.default.001.htm"><span class="BookTitleLink">明经通道 AutoLISP 函数</span></a>
</div>	
									&nbsp;
								</td><td align="right">
<table border="0" cellspacing="0" cellpadding="0" class="HeadNavTable">
<tr>
<td class="InfoLine" id="infoline" align="right">明经通道 AutoLISP 函数&nbsp;</td><td class="NavGif"><a title="回到上一层..." href="ALR.default.001.htm"><span onmouseout="showinfo(0);" onmouseover="showinfo(1);" class="HeadNavLink"><img border="0" src="ac.pg_up.gif"></span></a></td><td>&nbsp;</td> 
</tr>
</table>
</td>
</tr>
<tr>
<td colspan="2">
<div class="TopHead">defun-q-list-set</div>
</td>
</tr>
<tr valign="bottom">
<td height="33" colspan="2">
<table cellpadding="0" cellspacing="0" border="0" class="TabTable">
<tr>
<td width="10">&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
<p id="crleadin" class="cr_leadin">将符号设置为以表形式定义的函数</p>
<pre class="prog_in_end">(defun-q-list-set 'sym list)</pre>
<p class="Heading-2">参数</p>
<p class="define_head">sym</p>
<p class="define_text">命名函数的符号。</p>
<p class="define_head">list</p>
<p class="define_text">由函数中要包含的表达式组成的表。</p>
<p class="Heading-2">返回值</p>
<p class="body">已定义的 sym。</p> 
<p class="Heading-2">示例</p>
<pre class="prog_in">_$ (defun-q-list-set 'foo '((x) x))</pre>
<pre class="prog_in">FOO</pre>
<pre class="prog_in">_$ (foo 3)</pre>
<pre class="prog_in_end">3</pre>
<p class="body">下面的样例介绍如何使用 defun-q-list-set 把两个函数合并为一个。首先，请在 Visual LISP 控制台窗口中用 defun-q 定义两个函数：</p> 
<pre class="prog_in">_$ (defun-q s::startup (x) (print x))</pre>
<pre class="prog_in">S::STARTUP</pre>
<pre class="prog_in">_$ (defun-q my-startup (x) (print (list x)))</pre>
<pre class="prog_in_end">MY-STARTUP</pre>
<p class="body">然后使用 defun-q-list-set 将它们合并为一个函数：</p> 
<pre class="prog_in">_$ (defun-q-list-set 's::startup (append</pre>
<pre class="prog_in">   (defun-q-list-ref 's::startup)</pre>
<pre class="prog_in">   (cdr (defun-q-list-ref 'my-startup))))</pre>
<pre class="prog_in_end">S::STARTUP</pre>
<p class="body">下面是这些函数分别如何响应，以及使用 defun-q-list-set 合并后函数的工作方式。</p> 
<pre class="prog_in">_$ (defun-q foo (x) (print (list 'foo x)))</pre>
<pre class="prog_in">FOO</pre>
<pre class="prog_in">_$ (foo 1)</pre>
<pre class="prog_in">(FOO 1) (FOO 1)</pre>
<pre class="prog_in">_$ (defun-q bar (x) (print (list 'bar x)))</pre>
<pre class="prog_in">BAR</pre>
<pre class="prog_in">_$ (bar 2)</pre>
<pre class="prog_in">(BAR 2) (BAR 2)</pre>
<pre class="prog_in">_$ (defun-q-list-set</pre>
<pre class="prog_in">  'foo</pre>
<pre class="prog_in">  (append (defun-q-list-ref 'foo)</pre>
<pre class="prog_in">              (cdr (defun-q-list-ref 'bar))</pre>
<pre class="prog_in">  ))</pre>
<pre class="prog_in">FOO</pre>
<pre class="prog_in">_$ (foo 3)</pre>
<pre class="prog_in">(FOO 3) </pre>
<pre class="prog_in_end">(BAR 3) (BAR 3)</pre>
<p class="see_also">参阅</p>
<p class="body"> <a href="ALR.default.069.htm">defun-q</a> 和 <a href="ALR.default.070.htm">defun-q-list-ref</a>  
函数。</p>
<table cellpadding="4" cellspacing="0" border="0" width="100%" class="FooterTable">
<tr valign="top">
<td><P class=element><a href=http://www.mjtd.com>明经通道</a> 版权所有 未经许可 不得传播</td><td><script language=javascript src='ac.acad_mc.js'></script></td><td align="right">&nbsp;<a href="javascript:doComments();"><span class="CommentsLink" title="点击此处发送有关对本主题的评论">评论</span></a>&nbsp;</td>
</tr>
</table>
<p class="footer_padding">&nbsp;</p>
</body> 
</html>
