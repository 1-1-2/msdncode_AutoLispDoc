<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>vlax-variant-type</title>
<link type="text/css" href="ac.acad_ak.css" rel="StyleSheet">
<link media="print" type="text/css" href="ac.acad_ak_print.css" rel="StyleSheet">
<script src="ac_common.js" language="javascript"></script><script src="ac.strings.js" language="javascript"></script><script src="ac.acad_ak.js" language="javascript"></script>
</head>
<body bgcolor="#ffffff">
<div class="HeadingDiv">
<table class="HeadingTable" border="0" cellspacing="0" cellpadding="0" width="103%">
<tr valign="top">
<td class="BookTitleCell" height="29">
<div class="BookTitle">
<a href="ALR.default.246v.htm"><span class="BookTitleLink">明经通道 Visual LISP 函数</span></a>
</div>	
									&nbsp;
								</td><td align="right">
<table border="0" cellspacing="0" cellpadding="0" class="HeadNavTable">
<tr>
<td class="InfoLine" id="infoline" align="right">明经通道 Visual LISP 函数&nbsp;</td><td class="NavGif"><a title="回到上一层..." href="ALR.default.246v.htm"><span onmouseout="showinfo(0);" onmouseover="showinfo(1);" class="HeadNavLink"><img border="0" src="ac.pg_up.gif"></span></a></td><td>&nbsp;</td> 
</tr>
</table>
</td>
</tr>
<tr>
<td colspan="2">
<div class="TopHead">vlax-variant-type</div>
</td>
</tr>
<tr valign="bottom">
<td height="33" colspan="2">
<table cellpadding="0" cellspacing="0" border="0" class="TabTable">
<tr>
<td width="10">&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
<p id="crleadin" class="cr_leadin">确定变体的数据类型</p>
<pre class="prog_in_end">(vlax-variant-type var)</pre>
<p class="Heading-2">参数</p>
<p class="define_head">var</p>
<p class="define_text">变量，其值为变体。</p>
<p class="Heading-2">返回值</p>
<p class="body">如果 var 包含变体，则返回下列整数之一：</p> 
<p class="body">
<span class="CharSansBold">0 </span>未初始化 (<span class="CharCourier">vlax-vbEmpty</span>)</p>
<p class="body">
<span class="CharSansBold">1 </span>不包含有效数据 (<span class="CharCourier">vlax-vbNull</span>) </p>
<p class="body"><span class="CharSansBold">2 </span>整数型 (<span class="CharCourier">vlax-vbInteger</span>)</p>
<p class="body"><span class="CharSansBold">3 </span>长整数型 (<span class="CharCourier">vlax-vbLong</span>)</p>
<p class="body"><span class="CharSansBold">4 </span>单精度浮点数 (<span class="CharCourier">vlax-vbSingle</span>)</p>
<p class="body"><span class="CharSansBold">5 </span>双精度浮点数 (<span class="CharCourier">vlax-vbDouble</span>)</p>
<p class="body"><span class="CharSansBold">8 </span>字符串 (<span class="CharCourier">vlax-vbString</span>)</p>
<p class="body"><span class="CharSansBold">9 </span>对象 (<span class="CharCourier">vlax-vbObject</span>)</p>
<p class="body"><span class="CharSansBold">11 </span>布尔值 (<span class="CharCourier">vlax-vbBoolean</span>)</p>
<p class="body">
<span class="CharSansBold">8192 + </span><span class="CharItalic">n</span>  某种数据类型的 SafeArray (vlax-vbArray)。如，双精度数组 (vlax-vbDouble) 返回 8197 (8192 + 
5)。</p>
<p class="body">如果 var 不包含变体，则返回错误信息。</p> 
<p class="Heading-2">示例</p>
<p class="body">将变体设为 nil，然后显示变体的数据类型：</p> 
<pre class="prog_in">_$ (setq varnil (vlax-make-variant nil))</pre>
<pre class="prog_in">#&lt;variant 0 &gt;</pre>
<pre class="prog_in">_$ (vlax-variant-type varnil)</pre>
<pre class="prog_in_end">0</pre>
<p class="body">将变体设为整数，并将变体显式定义为整型：</p>
<pre class="prog_in">_$ (setq varint (vlax-make-variant 5 vlax-vbInteger))</pre>
<pre class="prog_in">#&lt;variant 2 5&gt;</pre>
<pre class="prog_in">_$ (vlax-variant-type varint)</pre>
<pre class="prog_in_end">2</pre>
<p class="body">将变体设为整数，然后显示变体的数据类型：</p>
<pre class="prog_in">_$ (setq varint (vlax-make-variant 5))</pre>
<pre class="prog_in">#&lt;variant 3 5&gt;</pre>
<pre class="prog_in">_$ (vlax-variant-type varint)</pre>
<pre class="prog_in_end">3</pre>
<p class="body">请注意如果在 <b> vlax-make-variant</b> 中没有显式定义数据类型时指定整数，数据类型将被定义为长整数。</p> 
<p class="body">将变体设为字符串，然后显示变体的数据类型：</p>
<pre class="prog_in">_$ (setq varstr (vlax-make-variant &quot;ghost&quot;))</pre>
<pre class="prog_in">#&lt;variant 8 ghost&gt;</pre>
<pre class="prog_in">_$ (vlax-variant-type varstr)</pre>
<pre class="prog_in_end">8</pre>
<p class="body">创建双精度的 SafeArray，将 SafeArray 指定为变体，然后显示变体的数据类型：</p> 
<pre class="prog_in">_$ (setq 4dubs (vlax-make-safearray vlax-vbDouble '(0 . 3)))</pre>
<pre class="prog_in">#&lt;safearray...&gt;</pre>
<pre class="prog_in">_$ (setq var4dubs (vlax-make-variant 4dubs))</pre>
<pre class="prog_in">#&lt;variant 8197 ...&gt;</pre>
<pre class="prog_in">_$ (vlax-variant-type var4dubs)</pre>
<pre class="prog_in_end">8197</pre>
<p class="body">变体类型值大于 8192，说明变体中包含某种类型的 SafeArray。从返回的数值中减去 8192 可以确定 SafeArray 的数据类型。在本例中，8197-8192=5 (vlax-vbDouble)。</p> 
<p class="body">将变量的值设为实数，然后调用 vlax-variant-type 检查数据类型：</p> 
<pre class="prog_in">_$ (setq notvar 6.0)</pre>
<pre class="prog_in">6.0</pre>
<pre class="prog_in">_$ (vlax-variant-type notvar)</pre>
<pre class="prog_in_end">; *** 错误：参数类型错误：variantp 6.0</pre>
<p class="body">该样例中返回错误信息，因为传递给 vlax-variant-type 的变量不包含变体。</p> 
<p class="see_also">参阅</p>
<p class="body"><a href="ALR.default.356.htm">vlax-make-safearray</a>、<a href="ALR.default.357.htm">vlax-make-variant</a>、<a href="ALR.default.377.htm">vlax-variant-change-type</a> 和 <a href="ALR.default.379.htm">vlax-variant-value</a> 函数。</p>
<table cellpadding="4" cellspacing="0" border="0" width="100%" class="FooterTable">
<tr valign="top">
<td><P class=element><a href=http://www.mjtd.com>明经通道</a> 版权所有 未经许可 不得传播</td><td><script language=javascript src='ac.acad_mc.js'></script></td><td align="right">&nbsp;<a href="javascript:doComments();"><span class="CommentsLink" title="点击此处发送有关对本主题的评论">评论</span></a>&nbsp;</td>
</tr>
</table>
<p class="footer_padding">&nbsp;</p>
</body> 
</html>
